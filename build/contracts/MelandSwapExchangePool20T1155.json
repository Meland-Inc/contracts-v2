{
  "contractName": "MelandSwapExchangePool20T1155",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC1155",
          "name": "_erc1155token",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Metadata",
          "name": "_erc20token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_productId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc1155Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "productId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplie",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getERC20AvailableSpace",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"_erc1155token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_erc20token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_productId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getERC20AvailableSpace\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplie\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/swap/MelandSwapExchangePool.sol\":\"MelandSwapExchangePool20T1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x84690ebda74336bdda266a1c10e4edb5e2488bf2ab018cfc0cf11693b743dff6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b6ff35bfde9ba27b33dfc2c030ba2531aa21983af2a0f7e6ec3ea13df878ab4\",\"dweb:/ipfs/QmYatmcGFLRFEQpMQ6sqBw9W9Kk71vn7Hy1eAk1P7aj6Xk\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/nft/IProductManager.sol\":{\"keccak256\":\"0x3f99a4f05468eb2aa10451180731233c3bcc0363d6bb7bc15728d7df3ab58b6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f805e3f5d5fa6aadfb3006315112f8400b3bdda47b2f2118f234c7ef193caf8e\",\"dweb:/ipfs/QmcpVu99zS9HuiTk1wVNQbncnC3c4yBp6B8reMKLpLe6U7\"]},\"project:/contracts/swap/IMelandSwapExchangePool.sol\":{\"keccak256\":\"0x7b33eb48b350e477b44f7057e2717eb8090cea854f112ac133d1514643271c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c4b0f04381e02036d681fbb3469041847239952dba2e978e323b9821dac672d\",\"dweb:/ipfs/QmUiwYdCJ25Z2DVd5SHSKx4x8o7b6uxCqQJtYvgSwaawPr\"]},\"project:/contracts/swap/MelandSwapExchangePool.sol\":{\"keccak256\":\"0xc2f0e7b686b4ffc83bec35271dcb050da340e1dd1fc097bd9a8f36be38c6544e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e790580815dc1db5b031647762f81ac0c0f0645aba3c9f3d23fd24ab238c095f\",\"dweb:/ipfs/QmQgyyemE81NGMHYKdSHJhAKV4wGxZYC8NEv9iC6uJeZ4j\"]}},\"version\":1}",
  "bytecode": "0x6101406040523480156200001257600080fd5b50604051620010a3380380620010a383398101604081905262000035916200037a565b806040518060400160405280601181526020017013595b185b990c8c150c4c4d4d541bdbdb607a1b815250866001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200009a57600080fd5b505afa158015620000af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000d991908101906200040f565b85604051602001620000ed9291906200044f565b60408051601f19818403018152919052815162000112906003906020850190620001e1565b50805162000128906004906020840190620001e1565b5050506001600160a01b0390811660805286811660a052851660c05260e08490526200015362000188565b6001600160a01b03166101005261012083905281516200017b906005906020850190620001e1565b50505050505050620004bb565b60006200019f620001a460201b620005b51760201c565b905090565b6080516000906001600160a01b0316331415620001c8575060131936013560601c90565b6200019f620001dd60201b620005fa1760201c565b3390565b828054620001ef906200047e565b90600052602060002090601f0160209004810192826200021357600085556200025e565b82601f106200022e57805160ff19168380011785556200025e565b828001600101855582156200025e579182015b828111156200025e57825182559160200191906001019062000241565b506200026c92915062000270565b5090565b5b808211156200026c576000815560010162000271565b6001600160a01b03811681146200029d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002d3578181015183820152602001620002b9565b83811115620002e3576000848401525b50505050565b600082601f830112620002fb57600080fd5b81516001600160401b0380821115620003185762000318620002a0565b604051601f8301601f19908116603f01168101908282118183101715620003435762000343620002a0565b816040528381528660208588010111156200035d57600080fd5b62000370846020830160208901620002b6565b9695505050505050565b60008060008060008060c087890312156200039457600080fd5b8651620003a18162000287565b6020880151909650620003b48162000287565b6040880151606089015160808a015192975090955093506001600160401b03811115620003e057600080fd5b620003ee89828a01620002e9565b92505060a0870151620004018162000287565b809150509295509295509295565b6000602082840312156200042257600080fd5b81516001600160401b038111156200043957600080fd5b6200044784828501620002e9565b949350505050565b6000835162000463818460208801620002b6565b602d60f81b9201918252506001810191909152602101919050565b600181811c908216806200049357607f821691505b60208210811415620004b557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610b976200050c60003960006102b90152600061027a0152600061016101526000505060005050600081816101e601526105b90152610b976000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80635ca2e0ae116100a2578063a9059cbb11610071578063a9059cbb14610262578063c45a015514610275578063c5ce3911146102b4578063dd62ed3e146102db578063ef430aa6146102ee57600080fd5b80635ca2e0ae1461021657806370a082311461021e57806395d89b4114610247578063a457c2d71461024f57600080fd5b806323b872dd116100e957806323b872dd14610199578063313ce567146101ac57806339509351146101bb57806350c9f529146101ce578063572b6c05146101d657600080fd5b806306fdde031461011b578063095ea7b31461013957806317d70f7c1461015c57806318160ddd14610191575b600080fd5b6101236102f6565b6040516101309190610974565b60405180910390f35b61014c6101473660046109e5565b610388565b6040519015158152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610130565b600254610183565b61014c6101a7366004610a0f565b6103aa565b60405160128152602001610130565b61014c6101c93660046109e5565b6103d8565b610183610404565b61014c6101e4366004610a4b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61018361043a565b61018361022c366004610a4b565b6001600160a01b031660009081526020819052604090205490565b61012361044a565b61014c61025d3660046109e5565b610459565b61014c6102703660046109e5565b6104e4565b61029c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6101836102e9366004610a6d565b6104fc565b610123610527565b60606003805461030590610aa0565b80601f016020809104026020016040519081016040528092919081815260200182805461033190610aa0565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b6000806103936105fe565b90506103a0818585610608565b5060019392505050565b6000806103b56105fe565b90506103c285828561072c565b6103cd8585856107a6565b506001949350505050565b6000806103e36105fe565b90506103a08185856103f585896104fc565b6103ff9190610af1565b610608565b6000806008546007546104179190610b09565b90506008546006548261042a9190610b20565b6104349190610b3f565b91505090565b600061044560025490565b905090565b60606004805461030590610aa0565b6000806104646105fe565b9050600061047282866104fc565b9050838110156104d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103cd8286868403610608565b6000806104ef6105fe565b90506103a08185856107a6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005805461053490610aa0565b80601f016020809104026020016040519081016040528092919081815260200182805461056090610aa0565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b505050505081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314156105f5575060131936013560601c90565b503390565b3390565b60006104456105b5565b6001600160a01b03831661066a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ce565b6001600160a01b0382166106cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ce565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061073884846104fc565b905060001981146107a057818110156107935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ce565b6107a08484848403610608565b50505050565b6001600160a01b03831661080a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ce565b6001600160a01b03821661086c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ce565b6001600160a01b038316600090815260208190526040902054818110156108e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ce565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061091b908490610af1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161096791815260200190565b60405180910390a36107a0565b600060208083528351808285015260005b818110156109a157858101830151858201604001528201610985565b818111156109b3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109e057600080fd5b919050565b600080604083850312156109f857600080fd5b610a01836109c9565b946020939093013593505050565b600080600060608486031215610a2457600080fd5b610a2d846109c9565b9250610a3b602085016109c9565b9150604084013590509250925092565b600060208284031215610a5d57600080fd5b610a66826109c9565b9392505050565b60008060408385031215610a8057600080fd5b610a89836109c9565b9150610a97602084016109c9565b90509250929050565b600181811c90821680610ab457607f821691505b60208210811415610ad557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b0457610b04610adb565b500190565b600082821015610b1b57610b1b610adb565b500390565b6000816000190483118215151615610b3a57610b3a610adb565b500290565b600082610b5c57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122055d3ab98c68389b4c5b90f3806e664fa693f6ef8e867f14d636e60872521d53f64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80635ca2e0ae116100a2578063a9059cbb11610071578063a9059cbb14610262578063c45a015514610275578063c5ce3911146102b4578063dd62ed3e146102db578063ef430aa6146102ee57600080fd5b80635ca2e0ae1461021657806370a082311461021e57806395d89b4114610247578063a457c2d71461024f57600080fd5b806323b872dd116100e957806323b872dd14610199578063313ce567146101ac57806339509351146101bb57806350c9f529146101ce578063572b6c05146101d657600080fd5b806306fdde031461011b578063095ea7b31461013957806317d70f7c1461015c57806318160ddd14610191575b600080fd5b6101236102f6565b6040516101309190610974565b60405180910390f35b61014c6101473660046109e5565b610388565b6040519015158152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610130565b600254610183565b61014c6101a7366004610a0f565b6103aa565b60405160128152602001610130565b61014c6101c93660046109e5565b6103d8565b610183610404565b61014c6101e4366004610a4b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61018361043a565b61018361022c366004610a4b565b6001600160a01b031660009081526020819052604090205490565b61012361044a565b61014c61025d3660046109e5565b610459565b61014c6102703660046109e5565b6104e4565b61029c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6101836102e9366004610a6d565b6104fc565b610123610527565b60606003805461030590610aa0565b80601f016020809104026020016040519081016040528092919081815260200182805461033190610aa0565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b6000806103936105fe565b90506103a0818585610608565b5060019392505050565b6000806103b56105fe565b90506103c285828561072c565b6103cd8585856107a6565b506001949350505050565b6000806103e36105fe565b90506103a08185856103f585896104fc565b6103ff9190610af1565b610608565b6000806008546007546104179190610b09565b90506008546006548261042a9190610b20565b6104349190610b3f565b91505090565b600061044560025490565b905090565b60606004805461030590610aa0565b6000806104646105fe565b9050600061047282866104fc565b9050838110156104d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103cd8286868403610608565b6000806104ef6105fe565b90506103a08185856107a6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005805461053490610aa0565b80601f016020809104026020016040519081016040528092919081815260200182805461056090610aa0565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b505050505081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314156105f5575060131936013560601c90565b503390565b3390565b60006104456105b5565b6001600160a01b03831661066a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ce565b6001600160a01b0382166106cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ce565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061073884846104fc565b905060001981146107a057818110156107935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ce565b6107a08484848403610608565b50505050565b6001600160a01b03831661080a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ce565b6001600160a01b03821661086c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ce565b6001600160a01b038316600090815260208190526040902054818110156108e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ce565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061091b908490610af1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161096791815260200190565b60405180910390a36107a0565b600060208083528351808285015260005b818110156109a157858101830151858201604001528201610985565b818111156109b3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109e057600080fd5b919050565b600080604083850312156109f857600080fd5b610a01836109c9565b946020939093013593505050565b600080600060608486031215610a2457600080fd5b610a2d846109c9565b9250610a3b602085016109c9565b9150604084013590509250925092565b600060208284031215610a5d57600080fd5b610a66826109c9565b9392505050565b60008060408385031215610a8057600080fd5b610a89836109c9565b9150610a97602084016109c9565b90509250929050565b600181811c90821680610ab457607f821691505b60208210811415610ad557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b0457610b04610adb565b500190565b600082821015610b1b57610b1b610adb565b500390565b6000816000190483118215151615610b3a57610b3a610adb565b500290565b600082610b5c57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122055d3ab98c68389b4c5b90f3806e664fa693f6ef8e867f14d636e60872521d53f64736f6c63430008090033",
  "immutableReferences": {
    "3957": [
      {
        "length": 32,
        "start": 486
      },
      {
        "length": 32,
        "start": 1465
      }
    ],
    "7868": [
      {
        "length": 32,
        "start": 353
      }
    ],
    "7870": [
      {
        "length": 32,
        "start": 634
      }
    ],
    "7872": [
      {
        "length": 32,
        "start": 697
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3414:57",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:57",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:86:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "133:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "145:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "135:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "135:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "135:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "92:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "103:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "118:3:57",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "123:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "114:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "114:11:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "110:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "110:19:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "99:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "99:31:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "89:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "89:42:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:50:57"
                  },
                  "nodeType": "YulIf",
                  "src": "79:70:57"
                }
              ]
            },
            "name": "validator_revert_contract_IERC1155",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "58:5:57",
                "type": ""
              }
            ],
            "src": "14:141:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:95:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "209:1:57",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "216:3:57",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "221:10:57",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "212:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "212:20:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:31:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "202:31:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "249:1:57",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "252:4:57",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "242:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "242:15:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "242:15:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "273:1:57",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "276:4:57",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "266:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "266:15:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "266:15:57"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "160:127:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "345:205:57",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "355:10:57",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "364:1:57",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "359:1:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "424:63:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "449:3:57"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "454:1:57"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "445:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "445:11:57"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "468:3:57"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "473:1:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "464:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "464:11:57"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "458:5:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "458:18:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "438:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "438:39:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "438:39:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "385:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "382:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:13:57"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "396:19:57",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "398:15:57",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "407:1:57"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "410:2:57",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "403:3:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "403:10:57"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "398:1:57"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "378:3:57",
                    "statements": []
                  },
                  "src": "374:113:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "513:31:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:3:57"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "531:6:57"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "522:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "522:16:57"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "515:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "515:27:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "515:27:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "502:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "505:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "499:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "499:13:57"
                  },
                  "nodeType": "YulIf",
                  "src": "496:48:57"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "323:3:57",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "328:3:57",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "333:6:57",
                "type": ""
              }
            ],
            "src": "292:258:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "619:622:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "647:6:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "655:4:57",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "643:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "643:17:57"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "662:3:57"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "639:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "639:27:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:35:57"
                  },
                  "nodeType": "YulIf",
                  "src": "629:55:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "693:23:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "709:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "703:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:13:57"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "697:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "725:28:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "743:2:57",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "747:1:57",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "739:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "739:10:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "751:1:57",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "735:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:18:57"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "729:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "776:22:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "778:16:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "778:18:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "778:18:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "768:2:57"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "772:2:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "765:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:10:57"
                  },
                  "nodeType": "YulIf",
                  "src": "762:36:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "807:17:57",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "821:2:57",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "817:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:7:57"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "811:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "833:23:57",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "853:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "847:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:9:57"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "837:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "865:71:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "887:6:57"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "911:2:57"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "915:4:57",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "907:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "907:13:57"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "922:2:57"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "903:22:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "927:2:57",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "899:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "899:31:57"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "932:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:40:57"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "883:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:53:57"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "869:10:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "995:22:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "997:16:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:18:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "997:18:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "954:10:57"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "966:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "951:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:18:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "974:10:57"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "986:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "971:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:22:57"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "948:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:46:57"
                  },
                  "nodeType": "YulIf",
                  "src": "945:72:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1033:2:57",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1037:10:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1026:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:22:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1026:22:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1064:6:57"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1072:2:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1057:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1057:18:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1057:18:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1123:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1132:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1135:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1125:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1125:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1125:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1098:6:57"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1106:2:57"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1094:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1094:15:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1111:4:57",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:26:57"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1118:3:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1087:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:35:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1084:55:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1174:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1182:4:57",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1170:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:17:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1201:4:57",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1189:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1189:17:57"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1208:2:57"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1148:21:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:63:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1148:63:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1220:15:57",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1229:6:57"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1220:5:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "593:6:57",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "601:3:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "609:5:57",
                "type": ""
              }
            ],
            "src": "555:686:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1462:712:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1509:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1518:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1521:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1483:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1492:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1479:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1479:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1504:3:57",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1475:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:33:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1472:53:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1534:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1553:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1547:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:16:57"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1538:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1607:5:57"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC1155",
                      "nodeType": "YulIdentifier",
                      "src": "1572:34:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1572:41:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1572:41:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1622:15:57",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1632:5:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1622:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1646:40:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1671:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1682:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1667:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1667:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1661:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1661:25:57"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1650:7:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1730:7:57"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC1155",
                      "nodeType": "YulIdentifier",
                      "src": "1695:34:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:43:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1695:43:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1747:17:57",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1757:7:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1747:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1773:35:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1793:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1804:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1789:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1789:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1783:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:25:57"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1773:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1817:35:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1837:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1848:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1833:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1833:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1827:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:25:57"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1817:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1861:40:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1885:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1896:3:57",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1881:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1881:19:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1875:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:26:57"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1865:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1944:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1953:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1956:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1946:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1946:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1946:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1916:6:57"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1932:2:57",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1936:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1928:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1928:10:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1940:1:57",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1913:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:30:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1910:50:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1969:71:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2012:9:57"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2023:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2008:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2008:22:57"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2032:7:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1979:28:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:61:57"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1969:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2049:41:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2074:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2085:3:57",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:19:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2064:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:26:57"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2053:7:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2134:7:57"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC1155",
                      "nodeType": "YulIdentifier",
                      "src": "2099:34:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:43:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2099:43:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2151:17:57",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2161:7:57"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2151:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC1155_$4582t_contract$_IERC20Metadata_$5271t_uint256t_bytes32t_string_memory_ptrt_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1388:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1399:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1411:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1419:6:57",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1427:6:57",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1435:6:57",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1443:6:57",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1451:6:57",
                "type": ""
              }
            ],
            "src": "1246:928:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2270:246:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2316:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2325:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2328:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2318:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2318:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2318:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2291:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2300:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2312:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2280:52:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2341:30:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2355:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2355:16:57"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2345:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2414:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2423:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2426:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2416:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2416:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2416:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2386:6:57"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2402:2:57",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2406:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2398:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2398:10:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2410:1:57",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2394:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2394:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2383:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:30:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2380:50:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2439:71:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2482:9:57"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2493:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2478:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:22:57"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2502:7:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2449:28:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2449:61:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2439:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2236:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2247:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2259:6:57",
                "type": ""
              }
            ],
            "src": "2179:337:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2789:238:57",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2799:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2819:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2813:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2813:13:57"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2803:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2861:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2869:4:57",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2857:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2857:17:57"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2876:3:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2881:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2835:21:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2835:53:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2835:53:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2897:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2914:3:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2919:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2910:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2910:16:57"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "2901:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "2942:5:57"
                      },
                      {
                        "hexValue": "2d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2949:3:57",
                        "type": "",
                        "value": "-"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2935:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:18:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2935:18:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "2973:5:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2980:1:57",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2969:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2969:13:57"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2984:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2962:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:29:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2962:29:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3000:21:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "3011:5:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3018:2:57",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3007:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:14:57"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3000:3:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_bytes32__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2757:3:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2762:6:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2770:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2781:3:57",
                "type": ""
              }
            ],
            "src": "2521:506:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3087:325:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3097:22:57",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:1:57",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3114:4:57"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3107:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:12:57"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3097:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3128:38:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3158:4:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3164:1:57",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3154:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:12:57"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3132:18:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3205:31:57",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3207:27:57",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3221:6:57"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3229:4:57",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3217:3:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3217:17:57"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3207:6:57"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3185:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3178:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3178:26:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3175:61:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3295:111:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3316:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3323:3:57",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3328:10:57",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3319:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3319:20:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3309:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3309:31:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3309:31:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3360:1:57",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3363:4:57",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3353:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3353:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3353:15:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3388:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3391:4:57",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3381:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3381:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3381:15:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3251:18:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3274:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3282:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3271:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3271:14:57"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3248:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3248:38:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3245:161:57"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3067:4:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3076:6:57",
                "type": ""
              }
            ],
            "src": "3032:380:57"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC1155(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_contract$_IERC1155_$4582t_contract$_IERC20Metadata_$5271t_uint256t_bytes32t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC1155(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IERC1155(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        let offset := mload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let value_2 := mload(add(headStart, 160))\n        validator_revert_contract_IERC1155(value_2)\n        value5 := value_2\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_bytes32__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"-\")\n        mstore(add(end_1, 1), value1)\n        end := add(end_1, 33)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 57,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6756:57",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:57",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:57",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:57",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:57",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:57"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:57"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:57"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:57",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:57",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:57"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:57"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:57",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:57"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:57"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:57"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:57"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:57"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:57"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:57"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:57",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:57",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:57"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:57"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:57"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:57"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:57",
                    "statements": []
                  },
                  "src": "294:140:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:57"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:57"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:57",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:57"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:57"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:57",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:57",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:57",
                "type": ""
              }
            ],
            "src": "14:597:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:57"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:57"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:57",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:57"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:57"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:57",
                "type": ""
              }
            ],
            "src": "616:173:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:57",
                "type": ""
              }
            ],
            "src": "794:254:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:57"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:57",
                "type": ""
              }
            ],
            "src": "1053:187:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:76:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:57"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:25:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:25:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:57",
                "type": ""
              }
            ],
            "src": "1245:177:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:224:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1577:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1579:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1579:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1561:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:52:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:39:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1612:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:29:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:48:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1660:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:38:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1707:42:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1717:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:57"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1481:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1492:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1504:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:57",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1520:6:57",
                "type": ""
              }
            ],
            "src": "1427:328:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1857:87:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1867:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1867:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1909:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:4:57",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1920:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:17:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:36:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:36:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1826:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:57",
                "type": ""
              }
            ],
            "src": "1760:184:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:116:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2065:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2074:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2077:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2067:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2067:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2040:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2049:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2036:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2032:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2029:52:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:39:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2100:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:29:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1985:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1996:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2008:6:57",
                "type": ""
              }
            ],
            "src": "1949:186:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2241:102:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2263:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2274:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2259:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2251:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2293:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2308:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2324:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2329:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2320:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2320:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2333:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2316:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2316:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2304:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2304:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2286:51:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2210:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2221:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2232:4:57",
                "type": ""
              }
            ],
            "src": "2140:203:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2449:76:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2471:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2467:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2459:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2501:9:57"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2512:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2494:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:25:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2494:25:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2418:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2429:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2440:4:57",
                "type": ""
              }
            ],
            "src": "2348:177:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:173:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2663:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2672:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2675:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2665:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2665:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2665:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2638:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2647:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2634:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2634:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2659:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2630:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2627:52:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2688:39:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2717:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2698:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:29:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:48:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2769:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2765:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2765:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2746:18:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:38:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2736:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2575:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2586:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2606:6:57",
                "type": ""
              }
            ],
            "src": "2530:260:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:325:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:22:57",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2874:1:57",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2877:4:57"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2870:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:12:57"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2860:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2891:38:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2921:4:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2927:1:57",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2917:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2917:12:57"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2895:18:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2968:31:57",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2970:27:57",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2984:6:57"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2992:4:57",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2980:3:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2980:17:57"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2970:6:57"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2948:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2941:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:26:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2938:61:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3058:111:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3079:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3086:3:57",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3091:10:57",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3082:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3082:20:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3072:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3072:31:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3072:31:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3123:1:57",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3126:4:57",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3116:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3116:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3116:15:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3151:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3154:4:57",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3144:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3144:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3144:15:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3014:18:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3045:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3034:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:14:57"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3011:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3011:38:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3008:161:57"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2830:4:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2839:6:57",
                "type": ""
              }
            ],
            "src": "2795:380:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3212:95:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3229:1:57",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3236:3:57",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:10:57",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3232:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3232:20:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3222:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3222:31:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3222:31:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:1:57",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3272:4:57",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:15:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:15:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:1:57",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:4:57",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3286:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:15:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3286:15:57"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3180:127:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3360:80:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3387:22:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3389:16:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3389:18:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3389:18:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3376:1:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3383:1:57"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3379:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3379:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3373:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3373:13:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3370:39:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3418:16:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3429:1:57"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3432:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3425:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3425:9:57"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3418:3:57"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3343:1:57",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3346:1:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3352:3:57",
                "type": ""
              }
            ],
            "src": "3312:128:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3494:76:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3516:22:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3518:16:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3518:18:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3518:18:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3510:1:57"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3513:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3507:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:8:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3504:34:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3547:17:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3559:1:57"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3562:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:9:57"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3547:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3476:1:57",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3479:1:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3485:4:57",
                "type": ""
              }
            ],
            "src": "3445:125:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3627:116:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3686:22:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3688:16:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3688:18:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3688:18:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3658:1:57"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3651:6:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3651:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3644:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3644:17:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3666:1:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3677:1:57",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3673:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3673:6:57"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3681:1:57"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3669:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3669:14:57"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3663:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3663:21:57"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3640:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3640:45:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3637:71:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3717:20:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3732:1:57"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3735:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3728:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:9:57"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3717:7:57"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3606:1:57",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3609:1:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3615:7:57",
                "type": ""
              }
            ],
            "src": "3575:168:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3794:171:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3825:111:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3846:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3853:3:57",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3858:10:57",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3849:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3849:20:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3839:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3839:31:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3839:31:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3890:1:57",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3893:4:57",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3883:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3883:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3883:15:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3918:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3921:4:57",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3911:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3911:15:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3911:15:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3814:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3807:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:9:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3804:132:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3945:14:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3954:1:57"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3957:1:57"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3950:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:9:57"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3945:1:57"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3779:1:57",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3782:1:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3788:1:57",
                "type": ""
              }
            ],
            "src": "3748:217:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4144:227:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4161:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4172:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4154:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4154:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4195:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4206:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4191:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4191:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4211:2:57",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4184:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4184:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4184:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4234:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4245:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4230:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4230:18:57"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4250:34:57",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4223:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4223:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4223:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4305:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4316:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:18:57"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4321:7:57",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4294:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:35:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4294:35:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4338:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4350:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4361:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4346:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4346:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4338:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4121:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4135:4:57",
                "type": ""
              }
            ],
            "src": "3970:401:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4550:226:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4567:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4578:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4560:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4560:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4601:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4612:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4597:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4597:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4617:2:57",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4590:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4590:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4651:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4636:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:18:57"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4656:34:57",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4629:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4629:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4629:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4711:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4722:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4707:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4707:18:57"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4727:6:57",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4700:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4700:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4700:34:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4743:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4755:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4766:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4751:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4751:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4743:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4527:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4541:4:57",
                "type": ""
              }
            ],
            "src": "4376:400:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4955:224:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4972:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4983:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4965:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4965:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4965:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5006:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5017:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5002:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5002:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5022:2:57",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4995:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4995:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5045:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5056:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5041:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5041:18:57"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5061:34:57",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5034:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5034:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5034:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5116:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5127:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5112:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5112:18:57"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5132:4:57",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5105:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5105:32:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5105:32:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5146:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5158:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5169:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5154:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5154:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5146:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4932:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4946:4:57",
                "type": ""
              }
            ],
            "src": "4781:398:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5358:179:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5375:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5386:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5368:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5368:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5368:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5409:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5420:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5405:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5405:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5425:2:57",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5398:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5398:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5398:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5448:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5459:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5444:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5444:18:57"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5464:31:57",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5437:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5437:59:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5437:59:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5505:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5517:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5528:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5513:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5513:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5505:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5335:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5349:4:57",
                "type": ""
              }
            ],
            "src": "5184:353:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5716:227:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5733:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5744:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5767:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5778:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5763:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5763:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5783:2:57",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5756:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5756:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5756:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5806:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5817:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5802:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5802:18:57"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5822:34:57",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5795:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5795:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5877:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5888:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5873:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5873:18:57"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5893:7:57",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5866:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5866:35:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5866:35:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5910:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5922:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5933:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5918:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5918:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5910:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5693:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5707:4:57",
                "type": ""
              }
            ],
            "src": "5542:401:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6122:225:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6139:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6150:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6132:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6132:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6173:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6184:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6169:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6169:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6189:2:57",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6162:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6162:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6212:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6223:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6208:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6208:18:57"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6228:34:57",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6201:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6201:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6201:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6283:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6294:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6279:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6279:18:57"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6299:5:57",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6272:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:33:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6272:33:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6314:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6326:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6322:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6314:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6099:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6113:4:57",
                "type": ""
              }
            ],
            "src": "5948:399:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6526:228:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6543:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6554:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6536:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6536:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6536:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6577:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6588:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6573:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6573:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:2:57",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6566:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6566:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6616:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6627:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6612:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6612:18:57"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6632:34:57",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6605:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6605:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6605:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6687:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6698:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6683:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6683:18:57"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6703:8:57",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6676:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6676:36:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6676:36:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6721:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6733:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6744:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6729:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6721:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6503:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6517:4:57",
                "type": ""
              }
            ],
            "src": "6352:402:57"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 57,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "387:4775:55:-:0;;;1016:586;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1378:16;1978:113:31;;;;;;;;;;;;;-1:-1:-1;;;1978:113:31;;;1307:11:55;-1:-1:-1;;;;;1307:16:55;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1307:18:55;;;;;;;;;;;;:::i;:::-;1332:10;1290:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1290:53:55;;;;;;;;;2044:13:31;;;;:5;;1290:53:55;2044:13:31;;;;:::i;:::-;-1:-1:-1;2067:17:31;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;;;;;;487:36:25;;;;;1410:28:55;;::::2;;::::0;1448:24;::::2;;::::0;1482:18:::2;::::0;;;1520:12:::2;:10;:12::i;:::-;-1:-1:-1::0;;;;;1510:22:55::2;;::::0;1543::::2;::::0;;;1575:20;;::::2;::::0;:8:::2;::::0;:20:::2;::::0;::::2;::::0;::::2;:::i;:::-;;1016:586:::0;;;;;;387:4775;;4969:191;5096:7;5126:27;:25;;;;;:27;;:::i;:::-;5119:34;;4969:191;:::o;678:401:25:-;648:17;;740:14;;-1:-1:-1;;;;;635:30:25;789:10;635:30;766:307;;;-1:-1:-1;;;972:14:25;968:23;955:37;951:2;947:46;678:401;:::o;766:307::-;1044:18;:16;;;;;:18;;:::i;640:96:35:-;719:10;;640:96::o;387:4775:55:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:4775:55;;;-1:-1:-1;387:4775:55;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:141:57;-1:-1:-1;;;;;99:31:57;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:127::-;221:10;216:3;212:20;209:1;202:31;252:4;249:1;242:15;276:4;273:1;266:15;292:258;364:1;374:113;388:6;385:1;382:13;374:113;;;464:11;;;458:18;445:11;;;438:39;410:2;403:10;374:113;;;505:6;502:1;499:13;496:48;;;540:1;531:6;526:3;522:16;515:27;496:48;;292:258;;;:::o;555:686::-;609:5;662:3;655:4;647:6;643:17;639:27;629:55;;680:1;677;670:12;629:55;703:13;;-1:-1:-1;;;;;765:10:57;;;762:36;;;778:18;;:::i;:::-;853:2;847:9;821:2;907:13;;-1:-1:-1;;903:22:57;;;927:2;899:31;895:40;883:53;;;951:18;;;971:22;;;948:46;945:72;;;997:18;;:::i;:::-;1037:10;1033:2;1026:22;1072:2;1064:6;1057:18;1118:3;1111:4;1106:2;1098:6;1094:15;1090:26;1087:35;1084:55;;;1135:1;1132;1125:12;1084:55;1148:63;1208:2;1201:4;1193:6;1189:17;1182:4;1174:6;1170:17;1148:63;:::i;:::-;1229:6;555:686;-1:-1:-1;;;;;;555:686:57:o;1246:928::-;1411:6;1419;1427;1435;1443;1451;1504:3;1492:9;1483:7;1479:23;1475:33;1472:53;;;1521:1;1518;1511:12;1472:53;1553:9;1547:16;1572:41;1607:5;1572:41;:::i;:::-;1682:2;1667:18;;1661:25;1632:5;;-1:-1:-1;1695:43:57;1661:25;1695:43;:::i;:::-;1804:2;1789:18;;1783:25;1848:2;1833:18;;1827:25;1896:3;1881:19;;1875:26;1757:7;;-1:-1:-1;1783:25:57;;-1:-1:-1;1827:25:57;-1:-1:-1;;;;;;1913:30:57;;1910:50;;;1956:1;1953;1946:12;1910:50;1979:61;2032:7;2023:6;2012:9;2008:22;1979:61;:::i;:::-;1969:71;;;2085:3;2074:9;2070:19;2064:26;2099:43;2134:7;2099:43;:::i;:::-;2161:7;2151:17;;;1246:928;;;;;;;;:::o;2179:337::-;2259:6;2312:2;2300:9;2291:7;2287:23;2283:32;2280:52;;;2328:1;2325;2318:12;2280:52;2355:16;;-1:-1:-1;;;;;2383:30:57;;2380:50;;;2426:1;2423;2416:12;2380:50;2449:61;2502:7;2493:6;2482:9;2478:22;2449:61;:::i;:::-;2439:71;2179:337;-1:-1:-1;;;;2179:337:57:o;2521:506::-;2781:3;2819:6;2813:13;2835:53;2881:6;2876:3;2869:4;2861:6;2857:17;2835:53;:::i;:::-;-1:-1:-1;;;2910:16:57;;2935:18;;;-1:-1:-1;2980:1:57;2969:13;;2962:29;;;;3018:2;3007:14;;2521:506;-1:-1:-1;2521:506:57:o;3032:380::-;3111:1;3107:12;;;;3154;;;3175:61;;3229:4;3221:6;3217:17;3207:27;;3175:61;3282:2;3274:6;3271:14;3251:18;3248:38;3245:161;;;3328:10;3323:3;3319:20;3316:1;3309:31;3363:4;3360:1;3353:15;3391:4;3388:1;3381:15;3245:161;;3032:380;;;:::o;:::-;387:4775:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "387:4775:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:57;;1211:22;1193:41;;1181:2;1166:18;4433:197:31;1053:187:57;633:32:55;;;;;;;;1391:25:57;;;1379:2;1364:18;633:32:55;1245:177:57;3244:106:31;3331:12;;3244:106;;5192:286;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:57;;1890:2;1875:18;3093:91:31;1760:184:57;5873:234:31;;;;;;:::i;:::-;;:::i;3025:260:55:-;;;:::i;536:136:25:-;;;;;;:::i;:::-;648:17;-1:-1:-1;;;;;635:30:25;;;;;;;536:136;1608:91:55;;;:::i;3408:125:31:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:31;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;672:32:55:-;;;;;;;;-1:-1:-1;;;;;2304:32:57;;;2286:51;;2274:2;2259:18;672:32:55;2140:203:57;711:34:55;;;;;3976:149:31;;;;;;:::i;:::-;;:::i;751:22:55:-;;;:::i;2156:98:31:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:31;;4433:197;-1:-1:-1;;;4433:197:31:o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:31;;5192:286;-1:-1:-1;;;;5192:286:31:o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;3025:260:55:-;3080:7;3099:30;3161:23;;3132:14;;:52;;;;:::i;:::-;3099:85;;3255:23;;3239:12;;3214:22;:37;;;;:::i;:::-;3213:65;;;;:::i;:::-;3194:84;;;3025:260;:::o;1608:91::-;1653:7;1679:13;3331:12:31;;;3244:106;1679:13:55;1672:20;;1608:91;:::o;2367:102:31:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:31;;4172:2:57;6803:85:31;;;4154:21:57;4211:2;4191:18;;;4184:30;4250:34;4230:18;;;4223:62;-1:-1:-1;;;4301:18:57;;;4294:35;4346:19;;6803:85:31;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:31;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;751:22:55:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;678:401:25:-;740:14;648:17;-1:-1:-1;;;;;635:30:25;789:10;635:30;766:307;;;-1:-1:-1;;;972:14:25;968:23;955:37;951:2;947:46;678:401;:::o;766:307::-;-1:-1:-1;719:10:35;;1608:91:55:o;640:96:35:-;719:10;;640:96::o;4969:191:55:-;5096:7;5126:27;:25;:27::i;10119:370:31:-;-1:-1:-1;;;;;10250:19:31;;10242:68;;;;-1:-1:-1;;;10242:68:31;;4578:2:57;10242:68:31;;;4560:21:57;4617:2;4597:18;;;4590:30;4656:34;4636:18;;;4629:62;-1:-1:-1;;;4707:18:57;;;4700:34;4751:19;;10242:68:31;4376:400:57;10242:68:31;-1:-1:-1;;;;;10328:21:31;;10320:68;;;;-1:-1:-1;;;10320:68:31;;4983:2:57;10320:68:31;;;4965:21:57;5022:2;5002:18;;;4995:30;5061:34;5041:18;;;5034:62;-1:-1:-1;;;5112:18:57;;;5105:32;5154:19;;10320:68:31;4781:398:57;10320:68:31;-1:-1:-1;;;;;10399:18:31;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1391:25:57;;;10450:32:31;;1364:18:57;10450:32:31;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:31;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:31;;5386:2:57;11019:68:31;;;5368:21:57;5425:2;5405:18;;;5398:30;5464:31;5444:18;;;5437:59;5513:18;;11019:68:31;5184:353:57;11019:68:31;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:31;;7602:68;;;;-1:-1:-1;;;7602:68:31;;5744:2:57;7602:68:31;;;5726:21:57;5783:2;5763:18;;;5756:30;5822:34;5802:18;;;5795:62;-1:-1:-1;;;5873:18:57;;;5866:35;5918:19;;7602:68:31;5542:401:57;7602:68:31;-1:-1:-1;;;;;7688:16:31;;7680:64;;;;-1:-1:-1;;;7680:64:31;;6150:2:57;7680:64:31;;;6132:21:57;6189:2;6169:18;;;6162:30;6228:34;6208:18;;;6201:62;-1:-1:-1;;;6279:18:57;;;6272:33;6322:19;;7680:64:31;5948:399:57;7680:64:31;-1:-1:-1;;;;;7826:15:31;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:31;;6554:2:57;7851:72:31;;;6536:21:57;6593:2;6573:18;;;6566:30;6632:34;6612:18;;;6605:62;-1:-1:-1;;;6683:18:57;;;6676:36;6729:19;;7851:72:31;6352:402:57;7851:72:31;-1:-1:-1;;;;;7957:15:31;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:31;8063:4;-1:-1:-1;;;;;8054:26:31;;8073:6;8054:26;;;;1391:25:57;;1379:2;1364:18;;1245:177;8054:26:31;;;;;;;;8091:37;11795:121;14:597:57;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:57;574:15;-1:-1:-1;;570:29:57;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:57:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:57;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:57:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:57:o;2530:260::-;2598:6;2606;2659:2;2647:9;2638:7;2634:23;2630:32;2627:52;;;2675:1;2672;2665:12;2627:52;2698:29;2717:9;2698:29;:::i;:::-;2688:39;;2746:38;2780:2;2769:9;2765:18;2746:38;:::i;:::-;2736:48;;2530:260;;;;;:::o;2795:380::-;2874:1;2870:12;;;;2917;;;2938:61;;2992:4;2984:6;2980:17;2970:27;;2938:61;3045:2;3037:6;3034:14;3014:18;3011:38;3008:161;;;3091:10;3086:3;3082:20;3079:1;3072:31;3126:4;3123:1;3116:15;3154:4;3151:1;3144:15;3008:161;;2795:380;;;:::o;3180:127::-;3241:10;3236:3;3232:20;3229:1;3222:31;3272:4;3269:1;3262:15;3296:4;3293:1;3286:15;3312:128;3352:3;3383:1;3379:6;3376:1;3373:13;3370:39;;;3389:18;;:::i;:::-;-1:-1:-1;3425:9:57;;3312:128::o;3445:125::-;3485:4;3513:1;3510;3507:8;3504:34;;;3518:18;;:::i;:::-;-1:-1:-1;3555:9:57;;3445:125::o;3575:168::-;3615:7;3681:1;3677;3673:6;3669:14;3666:1;3663:21;3658:1;3651:9;3644:17;3640:45;3637:71;;;3688:18;;:::i;:::-;-1:-1:-1;3728:9:57;;3575:168::o;3748:217::-;3788:1;3814;3804:132;;3858:10;3853:3;3849:20;3846:1;3839:31;3893:4;3890:1;3883:15;3921:4;3918:1;3911:15;3804:132;-1:-1:-1;3950:9:57;;3748:217::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\nimport \"./IMelandSwapExchangePool.sol\";\nimport \"../nft/IProductManager.sol\";\n\ncontract MelandSwapExchangePool20T1155 is\n    ERC20,\n    ERC2771Context,\n    IMelandSwapExchangePool\n{\n    // Variables\n    IERC1155 internal immutable erc1155token;\n\n    IERC20Metadata internal immutable erc20token;\n\n    // ERC1155 token id\n    uint256 public immutable tokenId;\n\n    address public immutable factory;\n\n    bytes32 public immutable productId;\n    string public category;\n\n    // erc20 token reserve\n    uint256 internal erc20Reserve;\n\n    // erc1155 token reserve\n    uint256 internal erc1155Reserve;\n\n    uint256 internal erc1155ReserveActivated;\n\n    uint256 internal constant ownerCutPerMillion = 50000;\n\n    constructor(\n        IERC1155 _erc1155token,\n        IERC20Metadata _erc20token,\n        uint256 _tokenId,\n        bytes32 _productId,\n        string memory _category,\n        address trustedForwarder\n    )\n        ERC20(\n            \"Meland20T1155Pool\",\n            string(abi.encodePacked(_erc20token.name(), \"-\", _productId))\n        )\n        ERC2771Context(trustedForwarder)\n    {\n        erc1155token = _erc1155token;\n        erc20token = _erc20token;\n        tokenId = _tokenId;\n        factory = _msgSender();\n\n        productId = _productId;\n        category = _category;\n    }\n\n    function totalSupplie() public view returns (uint256) {\n        return totalSupply();\n    }\n\n    // 初始化流动性需要提供双边token.\n    function _initLiquidity(\n        address provider,\n        uint256 erc20Amount,\n        uint256 erc1155Amount\n    ) internal {\n        require(\n            erc20Amount > 1000 * 10**erc20token.decimals(),\n            \"MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000\"\n        );\n        require(\n            erc1155Amount > 0,\n            \"Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0\"\n        );\n        require(\n            totalSupplie() == 0,\n            \"Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized\"\n        );\n        require(\n            erc20token.allowance(provider, address(this)) >= erc20Amount,\n            \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\"\n        );\n\n        erc1155ReserveActivated = erc1155Amount;\n        erc1155Reserve = erc1155Amount;\n        erc20Reserve = erc20Amount;\n        erc20token.transferFrom(provider, address(this), erc20Amount);\n\n        // mint lp token\n        _mint(provider, erc20Amount);\n\n        // TODO.\n        // Mint MF token.\n\n        // emit event\n        emit LiquidityAdded(provider, erc1155Amount, erc20Amount);\n    }\n\n    // 获取该池可以质押多少erc20 token\n    function getERC20AvailableSpace() public view returns (uint256) {\n        uint256 preActivate1155Reserve = erc1155Reserve -\n            erc1155ReserveActivated;\n        return\n            (preActivate1155Reserve * erc20Reserve) / erc1155ReserveActivated;\n    }\n\n    function _addERC20Liquidity(address provider, uint256 erc20Amount)\n        internal\n    {\n        require(\n            totalSupplie() > 0,\n            \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized\"\n        );\n        require(\n            erc20Amount <= getERC20AvailableSpace(),\n            \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space\"\n        );\n        require(\n            erc20token.allowance(provider, address(this)) >= erc20Amount,\n            \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\"\n        );\n\n        // 添加erc20token时, 计算激活nft的数量。\n        uint256 erc1155Activate = (erc20Amount / erc20Reserve) * erc1155ReserveActivated;\n        erc1155ReserveActivated += erc1155Activate;\n\n        require(erc1155Reserve >= erc1155ReserveActivated, \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve\");\n\n        uint256 liquidityToMint = (erc20Amount * totalSupplie()) / erc20Reserve;\n\n        erc20token.transferFrom(provider, address(this), erc20Amount);\n        erc20Reserve += erc20Amount;\n\n        // mint lp token\n        _mint(provider, liquidityToMint);\n\n        // TODO.\n        // Mint MF token.\n\n        // emit event\n        emit LiquidityAdded(provider, 0, erc20Amount);\n    }\n\n    function _addERC1155Liquidity(address provider, uint256 erc1155Amount)\n        internal\n    {\n        \n    }\n\n    function _msgData()\n        internal\n        view\n        virtual\n        override(ERC2771Context, Context)\n        returns (bytes calldata)\n    {\n        return ERC2771Context._msgData();\n    }\n\n    function _msgSender()\n        internal\n        view\n        virtual\n        override(ERC2771Context, Context)\n        returns (address)\n    {\n        return ERC2771Context._msgSender();\n    }\n}\n",
  "sourcePath": "/Users/alberthuang/code/contracts-v2/contracts/swap/MelandSwapExchangePool.sol",
  "ast": {
    "absolutePath": "project:/contracts/swap/MelandSwapExchangePool.sol",
    "exportedSymbols": {
      "Context": [
        5588
      ],
      "ERC20": [
        5168
      ],
      "ERC2771Context": [
        4027
      ],
      "IERC1155": [
        4582
      ],
      "IERC165": [
        5660
      ],
      "IERC20": [
        5246
      ],
      "IERC20Metadata": [
        5271
      ],
      "IMelandSwapExchangePool": [
        7835
      ],
      "IProductManager": [
        6942
      ],
      "MelandSwapExchangePool20T1155": [
        8186
      ]
    },
    "id": 8187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7848,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:55"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 7849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 4583,
        "src": "56:60:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 7850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5272,
        "src": "117:75:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5169,
        "src": "193:55:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "file": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "id": 7852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 4028,
        "src": "249:59:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/swap/IMelandSwapExchangePool.sol",
        "file": "./IMelandSwapExchangePool.sol",
        "id": 7853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 7836,
        "src": "309:39:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/nft/IProductManager.sol",
        "file": "../nft/IProductManager.sol",
        "id": 7854,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 6943,
        "src": "349:36:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7855,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5168,
              "src": "433:5:55"
            },
            "id": 7856,
            "nodeType": "InheritanceSpecifier",
            "src": "433:5:55"
          },
          {
            "baseName": {
              "id": 7857,
              "name": "ERC2771Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4027,
              "src": "444:14:55"
            },
            "id": 7858,
            "nodeType": "InheritanceSpecifier",
            "src": "444:14:55"
          },
          {
            "baseName": {
              "id": 7859,
              "name": "IMelandSwapExchangePool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7835,
              "src": "464:23:55"
            },
            "id": 7860,
            "nodeType": "InheritanceSpecifier",
            "src": "464:23:55"
          }
        ],
        "canonicalName": "MelandSwapExchangePool20T1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8186,
        "linearizedBaseContracts": [
          8186,
          7835,
          4027,
          5168,
          5271,
          5246,
          5588
        ],
        "name": "MelandSwapExchangePool20T1155",
        "nameLocation": "396:29:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7863,
            "mutability": "immutable",
            "name": "erc1155token",
            "nameLocation": "539:12:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "511:40:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1155_$4582",
              "typeString": "contract IERC1155"
            },
            "typeName": {
              "id": 7862,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7861,
                "name": "IERC1155",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4582,
                "src": "511:8:55"
              },
              "referencedDeclaration": 4582,
              "src": "511:8:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1155_$4582",
                "typeString": "contract IERC1155"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7866,
            "mutability": "immutable",
            "name": "erc20token",
            "nameLocation": "592:10:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "558:44:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
              "typeString": "contract IERC20Metadata"
            },
            "typeName": {
              "id": 7865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7864,
                "name": "IERC20Metadata",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5271,
                "src": "558:14:55"
              },
              "referencedDeclaration": 5271,
              "src": "558:14:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                "typeString": "contract IERC20Metadata"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 7868,
            "mutability": "immutable",
            "name": "tokenId",
            "nameLocation": "658:7:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "633:32:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7867,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 7870,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "697:7:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "672:32:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "672:7:55",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ce3911",
            "id": 7872,
            "mutability": "immutable",
            "name": "productId",
            "nameLocation": "736:9:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "711:34:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7871,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef430aa6",
            "id": 7874,
            "mutability": "mutable",
            "name": "category",
            "nameLocation": "765:8:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "751:22:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7873,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "751:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7876,
            "mutability": "mutable",
            "name": "erc20Reserve",
            "nameLocation": "824:12:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "807:29:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "807:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7878,
            "mutability": "mutable",
            "name": "erc1155Reserve",
            "nameLocation": "889:14:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "872:31:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7877,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "872:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7880,
            "mutability": "mutable",
            "name": "erc1155ReserveActivated",
            "nameLocation": "927:23:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "910:40:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7879,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "910:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 7883,
            "mutability": "constant",
            "name": "ownerCutPerMillion",
            "nameLocation": "983:18:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "957:52:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530303030",
              "id": 7882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1004:5:55",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7942,
              "nodeType": "Block",
              "src": "1400:202:55",
              "statements": [
                {
                  "expression": {
                    "id": 7919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7917,
                      "name": "erc1155token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "1410:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$4582",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7918,
                      "name": "_erc1155token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1425:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$4582",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "src": "1410:28:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$4582",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "id": 7920,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:28:55"
                },
                {
                  "expression": {
                    "id": 7923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7921,
                      "name": "erc20token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7866,
                      "src": "1448:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7922,
                      "name": "_erc20token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7889,
                      "src": "1461:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "src": "1448:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "id": 7924,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:24:55"
                },
                {
                  "expression": {
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7925,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7868,
                      "src": "1482:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7926,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7891,
                      "src": "1492:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1482:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7928,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:18:55"
                },
                {
                  "expression": {
                    "id": 7932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7929,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7870,
                      "src": "1510:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7930,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8185
                        ],
                        "referencedDeclaration": 8185,
                        "src": "1520:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 7931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1520:12:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1510:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7933,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:22:55"
                },
                {
                  "expression": {
                    "id": 7936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7934,
                      "name": "productId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7872,
                      "src": "1543:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7935,
                      "name": "_productId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7893,
                      "src": "1555:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1543:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7937,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:22:55"
                },
                {
                  "expression": {
                    "id": 7940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7938,
                      "name": "category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7874,
                      "src": "1575:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7939,
                      "name": "_category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7895,
                      "src": "1586:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1575:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7941,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:20:55"
                }
              ]
            },
            "id": 7943,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d656c616e6432305431313535506f6f6c",
                    "id": 7900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1250:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5fff00d0211267e34cf3bc750e299641e8ffb84103c3fb54f87f20b333a8f969",
                      "typeString": "literal_string \"Meland20T1155Pool\""
                    },
                    "value": "Meland20T1155Pool"
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 7905,
                                "name": "_erc20token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7889,
                                "src": "1307:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              "id": 7906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5258,
                              "src": "1307:16:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 7907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1307:18:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 7908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1327:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "id": 7909,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7893,
                            "src": "1332:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7903,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1290:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1290:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:53:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1283:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 7901,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:6:55",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7912,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7899,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5168,
                  "src": "1231:5:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1231:123:55"
              },
              {
                "arguments": [
                  {
                    "id": 7914,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7897,
                    "src": "1378:16:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7915,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7913,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "1363:14:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1363:32:55"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7886,
                  "mutability": "mutable",
                  "name": "_erc1155token",
                  "nameLocation": "1046:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1037:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$4582",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 7885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7884,
                      "name": "IERC1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4582,
                      "src": "1037:8:55"
                    },
                    "referencedDeclaration": 4582,
                    "src": "1037:8:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$4582",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7889,
                  "mutability": "mutable",
                  "name": "_erc20token",
                  "nameLocation": "1084:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1069:26:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 7888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7887,
                      "name": "IERC20Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5271,
                      "src": "1069:14:55"
                    },
                    "referencedDeclaration": 5271,
                    "src": "1069:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7891,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1113:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1105:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7893,
                  "mutability": "mutable",
                  "name": "_productId",
                  "nameLocation": "1139:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1131:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7895,
                  "mutability": "mutable",
                  "name": "_category",
                  "nameLocation": "1173:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1159:23:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7897,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "1200:16:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1192:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:195:55"
            },
            "returnParameters": {
              "id": 7916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:55"
            },
            "scope": 8186,
            "src": "1016:586:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7951,
              "nodeType": "Block",
              "src": "1662:37:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7948,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "1679:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:13:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7947,
                  "id": 7950,
                  "nodeType": "Return",
                  "src": "1672:20:55"
                }
              ]
            },
            "functionSelector": "5ca2e0ae",
            "id": 7952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplie",
            "nameLocation": "1617:12:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:2:55"
            },
            "returnParameters": {
              "id": 7947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7952,
                  "src": "1653:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:9:55"
            },
            "scope": 8186,
            "src": "1608:91:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8037,
              "nodeType": "Block",
              "src": "1880:1090:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7962,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7956,
                          "src": "1911:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 7963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1925:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 7964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1932:2:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 7965,
                                  "name": "erc20token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "1936:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                    "typeString": "contract IERC20Metadata"
                                  }
                                },
                                "id": 7966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5270,
                                "src": "1936:19:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 7967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1936:21:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1932:25:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1925:32:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1911:46:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e645377617045786368616e6765506f6f6c323054313135353a20696e69744c69717569646974793a206572633230416d6f756e74206d7573742062652067726561746572207468616e2031303030",
                        "id": 7971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1971:85:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d24573e5b94724b3d5f199c65de2e54446d7b00d0336c11f399c8945cb8dbffe",
                          "typeString": "literal_string \"MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000\""
                        },
                        "value": "MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d24573e5b94724b3d5f199c65de2e54446d7b00d0336c11f399c8945cb8dbffe",
                          "typeString": "literal_string \"MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000\""
                        }
                      ],
                      "id": 7961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1890:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:176:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7973,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:176:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7975,
                          "name": "erc1155Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7958,
                          "src": "2097:13:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2113:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2097:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352e696e69744c69717569646974793a2065726331313535416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 7978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2128:85:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_799372f9a9b823b1d7bab862b4e5c36ea97c22d2071ddb66449f2a461d9d41db",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_799372f9a9b823b1d7bab862b4e5c36ea97c22d2071ddb66449f2a461d9d41db",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0\""
                        }
                      ],
                      "id": 7974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2076:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:147:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7980,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:147:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7982,
                            "name": "totalSupplie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "2254:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 7983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2254:14:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2272:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2254:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a20616c726561647920696e697469616c697a6564",
                        "id": 7986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:68:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de30ad4ee4b67343ea1c7638ef9a6a4d455d84717264a03e47deee79a5334e11",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de30ad4ee4b67343ea1c7638ef9a6a4d455d84717264a03e47deee79a5334e11",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized\""
                        }
                      ],
                      "id": 7981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2233:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:132:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7988,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:132:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7992,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7954,
                              "src": "2417:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7995,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2435:4:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                ],
                                "id": 7994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2427:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7993,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2427:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2427:13:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7990,
                              "name": "erc20token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7866,
                              "src": "2396:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 7991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5223,
                            "src": "2396:20:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 7997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2396:45:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7998,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7956,
                          "src": "2445:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2396:60:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a2070726f766964657220646f6573206e6f74206861766520656e6f75676820616c6c6f77616e6365",
                        "id": 8000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2470:88:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        }
                      ],
                      "id": 7989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2375:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:193:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8002,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:193:55"
                },
                {
                  "expression": {
                    "id": 8005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8003,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "2579:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8004,
                      "name": "erc1155Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7958,
                      "src": "2605:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:39:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8006,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:39:55"
                },
                {
                  "expression": {
                    "id": 8009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8007,
                      "name": "erc1155Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7878,
                      "src": "2628:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8008,
                      "name": "erc1155Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7958,
                      "src": "2645:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2628:30:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8010,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:30:55"
                },
                {
                  "expression": {
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8011,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "2668:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8012,
                      "name": "erc20Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7956,
                      "src": "2683:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2668:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8014,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:26:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8018,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2728:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8021,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2746:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          ],
                          "id": 8020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2738:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8019,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2738:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2738:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8023,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2753:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8015,
                        "name": "erc20token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7866,
                        "src": "2704:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 8017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5245,
                      "src": "2704:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8025,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:61:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8027,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2807:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8028,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2817:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8026,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4985,
                      "src": "2801:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8030,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:28:55"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8032,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2926:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8033,
                        "name": "erc1155Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7958,
                        "src": "2936:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8034,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2951:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8031,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "2911:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:52:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8036,
                  "nodeType": "EmitStatement",
                  "src": "2906:57:55"
                }
              ]
            },
            "id": 8038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initLiquidity",
            "nameLocation": "1764:14:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1796:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1788:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7956,
                  "mutability": "mutable",
                  "name": "erc20Amount",
                  "nameLocation": "1822:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1814:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7958,
                  "mutability": "mutable",
                  "name": "erc1155Amount",
                  "nameLocation": "1851:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1843:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:92:55"
            },
            "returnParameters": {
              "id": 7960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:0:55"
            },
            "scope": 8186,
            "src": "1755:1215:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8056,
              "nodeType": "Block",
              "src": "3089:196:55",
              "statements": [
                {
                  "assignments": [
                    8044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8044,
                      "mutability": "mutable",
                      "name": "preActivate1155Reserve",
                      "nameLocation": "3107:22:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8056,
                      "src": "3099:30:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8043,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3099:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8048,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8045,
                      "name": "erc1155Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7878,
                      "src": "3132:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 8046,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "3161:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3132:52:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3099:85:55"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8049,
                            "name": "preActivate1155Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8044,
                            "src": "3214:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 8050,
                            "name": "erc20Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "3239:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3214:37:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8052,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3213:39:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8053,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "3255:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3213:65:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8042,
                  "id": 8055,
                  "nodeType": "Return",
                  "src": "3194:84:55"
                }
              ]
            },
            "functionSelector": "50c9f529",
            "id": 8057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20AvailableSpace",
            "nameLocation": "3034:22:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:55"
            },
            "returnParameters": {
              "id": 8042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "3080:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:9:55"
            },
            "scope": 8186,
            "src": "3025:260:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8150,
              "nodeType": "Block",
              "src": "3379:1270:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8065,
                            "name": "totalSupplie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "3410:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3410:14:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3427:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3410:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206e6f7420696e697469616c697a6564",
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3442:68:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d0256db179ccc37b667ea5d3084b5d2f5e927bfbeb00056b633959dd3bc615",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d0256db179ccc37b667ea5d3084b5d2f5e927bfbeb00056b633959dd3bc615",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized\""
                        }
                      ],
                      "id": 8064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3389:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:131:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8071,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:131:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8073,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8061,
                          "src": "3551:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8074,
                            "name": "getERC20AvailableSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8057,
                            "src": "3566:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3566:24:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3551:39:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206e6f7420656e6f756768207370616365",
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3604:69:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88324553709155b0fb201a8cffbab235151f01ce1b4686696a84974ac2245791",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88324553709155b0fb201a8cffbab235151f01ce1b4686696a84974ac2245791",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space\""
                        }
                      ],
                      "id": 8072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3530:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3530:153:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8079,
                  "nodeType": "ExpressionStatement",
                  "src": "3530:153:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 8083,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8059,
                              "src": "3735:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 8086,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3753:4:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                ],
                                "id": 8085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3745:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8084,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3745:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3745:13:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8081,
                              "name": "erc20token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7866,
                              "src": "3714:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 8082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5223,
                            "src": "3714:20:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 8088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:45:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8089,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8061,
                          "src": "3763:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3714:60:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a2070726f766964657220646f6573206e6f74206861766520656e6f75676820616c6c6f77616e6365",
                        "id": 8091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3788:88:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        }
                      ],
                      "id": 8080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3693:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:193:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8093,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:193:55"
                },
                {
                  "assignments": [
                    8095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8095,
                      "mutability": "mutable",
                      "name": "erc1155Activate",
                      "nameLocation": "3965:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8150,
                      "src": "3957:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3957:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8102,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8096,
                            "name": "erc20Amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8061,
                            "src": "3984:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8097,
                            "name": "erc20Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "3998:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3984:26:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8099,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3983:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 8100,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "4014:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3983:54:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3957:80:55"
                },
                {
                  "expression": {
                    "id": 8105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8103,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "4047:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8104,
                      "name": "erc1155Activate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8095,
                      "src": "4074:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4047:42:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8106,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:42:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8108,
                          "name": "erc1155Reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7878,
                          "src": "4108:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8109,
                          "name": "erc1155ReserveActivated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7880,
                          "src": "4126:23:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4108:41:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206572633131353552657365727665416374697661746564206d757374206265206c657373207468616e206572633131353552657365727665",
                        "id": 8111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4151:109:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36d6f82ae58480305306fb3c8ff1ee471340f1437b58b0d5f76ab5981c81ab33",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36d6f82ae58480305306fb3c8ff1ee471340f1437b58b0d5f76ab5981c81ab33",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve\""
                        }
                      ],
                      "id": 8107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4100:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:161:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8113,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:161:55"
                },
                {
                  "assignments": [
                    8115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8115,
                      "mutability": "mutable",
                      "name": "liquidityToMint",
                      "nameLocation": "4280:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8150,
                      "src": "4272:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8116,
                            "name": "erc20Amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8061,
                            "src": "4299:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8117,
                              "name": "totalSupplie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7952,
                              "src": "4313:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 8118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4313:14:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4299:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8120,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4298:30:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8121,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "4331:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4298:45:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:71:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8127,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4378:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8130,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4396:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          ],
                          "id": 8129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4388:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4388:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4388:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8132,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "4403:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8124,
                        "name": "erc20token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7866,
                        "src": "4354:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 8126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5245,
                      "src": "4354:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8134,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:61:55"
                },
                {
                  "expression": {
                    "id": 8137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8135,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "4425:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8136,
                      "name": "erc20Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8061,
                      "src": "4441:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4425:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8138,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:27:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8140,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4494:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8141,
                        "name": "liquidityToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8115,
                        "src": "4504:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8139,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4985,
                      "src": "4488:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4488:32:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8143,
                  "nodeType": "ExpressionStatement",
                  "src": "4488:32:55"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8145,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4617:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4627:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 8147,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "4630:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8144,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "4602:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:40:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "EmitStatement",
                  "src": "4597:45:55"
                }
              ]
            },
            "id": 8151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addERC20Liquidity",
            "nameLocation": "3300:18:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8059,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "3327:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "3319:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8061,
                  "mutability": "mutable",
                  "name": "erc20Amount",
                  "nameLocation": "3345:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "3337:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3337:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3318:39:55"
            },
            "returnParameters": {
              "id": 8063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:55"
            },
            "scope": 8186,
            "src": "3291:1358:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8158,
              "nodeType": "Block",
              "src": "4747:16:55",
              "statements": []
            },
            "id": 8159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addERC1155Liquidity",
            "nameLocation": "4664:20:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8153,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "4693:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "4685:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8155,
                  "mutability": "mutable",
                  "name": "erc1155Amount",
                  "nameLocation": "4711:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "4703:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4684:41:55"
            },
            "returnParameters": {
              "id": 8157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4747:0:55"
            },
            "scope": 8186,
            "src": "4655:108:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4026,
              5587
            ],
            "body": {
              "id": 8171,
              "nodeType": "Block",
              "src": "4914:49:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8167,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "4931:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$4027_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 8168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4026,
                      "src": "4931:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 8169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4931:25:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 8166,
                  "id": 8170,
                  "nodeType": "Return",
                  "src": "4924:32:55"
                }
              ]
            },
            "id": 8172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "4778:8:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8163,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 8161,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "4852:14:55"
                },
                {
                  "id": 8162,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5588,
                  "src": "4868:7:55"
                }
              ],
              "src": "4843:33:55"
            },
            "parameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4786:2:55"
            },
            "returnParameters": {
              "id": 8166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8172,
                  "src": "4894:14:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8164,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4893:16:55"
            },
            "scope": 8186,
            "src": "4769:194:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3999,
              5578
            ],
            "body": {
              "id": 8184,
              "nodeType": "Block",
              "src": "5109:51:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8180,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "5126:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$4027_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 8181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3999,
                      "src": "5126:25:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5126:27:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8179,
                  "id": 8183,
                  "nodeType": "Return",
                  "src": "5119:34:55"
                }
              ]
            },
            "id": 8185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4978:10:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8176,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 8174,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "5054:14:55"
                },
                {
                  "id": 8175,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5588,
                  "src": "5070:7:55"
                }
              ],
              "src": "5045:33:55"
            },
            "parameters": {
              "id": 8173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4988:2:55"
            },
            "returnParameters": {
              "id": 8179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "5096:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5096:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5095:9:55"
            },
            "scope": 8186,
            "src": "4969:191:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8187,
        "src": "387:4775:55",
        "usedErrors": []
      }
    ],
    "src": "32:5131:55"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/swap/MelandSwapExchangePool.sol",
    "exportedSymbols": {
      "Context": [
        5588
      ],
      "ERC20": [
        5168
      ],
      "ERC2771Context": [
        4027
      ],
      "IERC1155": [
        4582
      ],
      "IERC165": [
        5660
      ],
      "IERC20": [
        5246
      ],
      "IERC20Metadata": [
        5271
      ],
      "IMelandSwapExchangePool": [
        7835
      ],
      "IProductManager": [
        6942
      ],
      "MelandSwapExchangePool20T1155": [
        8186
      ]
    },
    "id": 8187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7848,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:55"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 7849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 4583,
        "src": "56:60:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 7850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5272,
        "src": "117:75:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 5169,
        "src": "193:55:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "file": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "id": 7852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 4028,
        "src": "249:59:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/swap/IMelandSwapExchangePool.sol",
        "file": "./IMelandSwapExchangePool.sol",
        "id": 7853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 7836,
        "src": "309:39:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/nft/IProductManager.sol",
        "file": "../nft/IProductManager.sol",
        "id": 7854,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8187,
        "sourceUnit": 6943,
        "src": "349:36:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7855,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5168,
              "src": "433:5:55"
            },
            "id": 7856,
            "nodeType": "InheritanceSpecifier",
            "src": "433:5:55"
          },
          {
            "baseName": {
              "id": 7857,
              "name": "ERC2771Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4027,
              "src": "444:14:55"
            },
            "id": 7858,
            "nodeType": "InheritanceSpecifier",
            "src": "444:14:55"
          },
          {
            "baseName": {
              "id": 7859,
              "name": "IMelandSwapExchangePool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7835,
              "src": "464:23:55"
            },
            "id": 7860,
            "nodeType": "InheritanceSpecifier",
            "src": "464:23:55"
          }
        ],
        "canonicalName": "MelandSwapExchangePool20T1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8186,
        "linearizedBaseContracts": [
          8186,
          7835,
          4027,
          5168,
          5271,
          5246,
          5588
        ],
        "name": "MelandSwapExchangePool20T1155",
        "nameLocation": "396:29:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7863,
            "mutability": "immutable",
            "name": "erc1155token",
            "nameLocation": "539:12:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "511:40:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1155_$4582",
              "typeString": "contract IERC1155"
            },
            "typeName": {
              "id": 7862,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7861,
                "name": "IERC1155",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4582,
                "src": "511:8:55"
              },
              "referencedDeclaration": 4582,
              "src": "511:8:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1155_$4582",
                "typeString": "contract IERC1155"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7866,
            "mutability": "immutable",
            "name": "erc20token",
            "nameLocation": "592:10:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "558:44:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
              "typeString": "contract IERC20Metadata"
            },
            "typeName": {
              "id": 7865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7864,
                "name": "IERC20Metadata",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5271,
                "src": "558:14:55"
              },
              "referencedDeclaration": 5271,
              "src": "558:14:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                "typeString": "contract IERC20Metadata"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 7868,
            "mutability": "immutable",
            "name": "tokenId",
            "nameLocation": "658:7:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "633:32:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7867,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 7870,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "697:7:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "672:32:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "672:7:55",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ce3911",
            "id": 7872,
            "mutability": "immutable",
            "name": "productId",
            "nameLocation": "736:9:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "711:34:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7871,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef430aa6",
            "id": 7874,
            "mutability": "mutable",
            "name": "category",
            "nameLocation": "765:8:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "751:22:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7873,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "751:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7876,
            "mutability": "mutable",
            "name": "erc20Reserve",
            "nameLocation": "824:12:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "807:29:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "807:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7878,
            "mutability": "mutable",
            "name": "erc1155Reserve",
            "nameLocation": "889:14:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "872:31:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7877,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "872:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7880,
            "mutability": "mutable",
            "name": "erc1155ReserveActivated",
            "nameLocation": "927:23:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "910:40:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7879,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "910:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 7883,
            "mutability": "constant",
            "name": "ownerCutPerMillion",
            "nameLocation": "983:18:55",
            "nodeType": "VariableDeclaration",
            "scope": 8186,
            "src": "957:52:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530303030",
              "id": 7882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1004:5:55",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7942,
              "nodeType": "Block",
              "src": "1400:202:55",
              "statements": [
                {
                  "expression": {
                    "id": 7919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7917,
                      "name": "erc1155token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "1410:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$4582",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7918,
                      "name": "_erc1155token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1425:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$4582",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "src": "1410:28:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$4582",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "id": 7920,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:28:55"
                },
                {
                  "expression": {
                    "id": 7923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7921,
                      "name": "erc20token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7866,
                      "src": "1448:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7922,
                      "name": "_erc20token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7889,
                      "src": "1461:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                        "typeString": "contract IERC20Metadata"
                      }
                    },
                    "src": "1448:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "id": 7924,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:24:55"
                },
                {
                  "expression": {
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7925,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7868,
                      "src": "1482:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7926,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7891,
                      "src": "1492:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1482:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7928,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:18:55"
                },
                {
                  "expression": {
                    "id": 7932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7929,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7870,
                      "src": "1510:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7930,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8185
                        ],
                        "referencedDeclaration": 8185,
                        "src": "1520:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 7931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1520:12:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1510:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7933,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:22:55"
                },
                {
                  "expression": {
                    "id": 7936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7934,
                      "name": "productId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7872,
                      "src": "1543:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7935,
                      "name": "_productId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7893,
                      "src": "1555:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1543:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7937,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:22:55"
                },
                {
                  "expression": {
                    "id": 7940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7938,
                      "name": "category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7874,
                      "src": "1575:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7939,
                      "name": "_category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7895,
                      "src": "1586:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1575:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7941,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:20:55"
                }
              ]
            },
            "id": 7943,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d656c616e6432305431313535506f6f6c",
                    "id": 7900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1250:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5fff00d0211267e34cf3bc750e299641e8ffb84103c3fb54f87f20b333a8f969",
                      "typeString": "literal_string \"Meland20T1155Pool\""
                    },
                    "value": "Meland20T1155Pool"
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 7905,
                                "name": "_erc20token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7889,
                                "src": "1307:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              "id": 7906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5258,
                              "src": "1307:16:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 7907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1307:18:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 7908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1327:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "id": 7909,
                            "name": "_productId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7893,
                            "src": "1332:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7903,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1290:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1290:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:53:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1283:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 7901,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:6:55",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7912,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7899,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5168,
                  "src": "1231:5:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1231:123:55"
              },
              {
                "arguments": [
                  {
                    "id": 7914,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7897,
                    "src": "1378:16:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7915,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7913,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "1363:14:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1363:32:55"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7886,
                  "mutability": "mutable",
                  "name": "_erc1155token",
                  "nameLocation": "1046:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1037:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$4582",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 7885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7884,
                      "name": "IERC1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4582,
                      "src": "1037:8:55"
                    },
                    "referencedDeclaration": 4582,
                    "src": "1037:8:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$4582",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7889,
                  "mutability": "mutable",
                  "name": "_erc20token",
                  "nameLocation": "1084:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1069:26:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 7888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7887,
                      "name": "IERC20Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5271,
                      "src": "1069:14:55"
                    },
                    "referencedDeclaration": 5271,
                    "src": "1069:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7891,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1113:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1105:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7893,
                  "mutability": "mutable",
                  "name": "_productId",
                  "nameLocation": "1139:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1131:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7895,
                  "mutability": "mutable",
                  "name": "_category",
                  "nameLocation": "1173:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1159:23:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7897,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "1200:16:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "1192:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:195:55"
            },
            "returnParameters": {
              "id": 7916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:55"
            },
            "scope": 8186,
            "src": "1016:586:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7951,
              "nodeType": "Block",
              "src": "1662:37:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7948,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "1679:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:13:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7947,
                  "id": 7950,
                  "nodeType": "Return",
                  "src": "1672:20:55"
                }
              ]
            },
            "functionSelector": "5ca2e0ae",
            "id": 7952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplie",
            "nameLocation": "1617:12:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:2:55"
            },
            "returnParameters": {
              "id": 7947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7952,
                  "src": "1653:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:9:55"
            },
            "scope": 8186,
            "src": "1608:91:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8037,
              "nodeType": "Block",
              "src": "1880:1090:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7962,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7956,
                          "src": "1911:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 7963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1925:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 7964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1932:2:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 7965,
                                  "name": "erc20token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "1936:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                    "typeString": "contract IERC20Metadata"
                                  }
                                },
                                "id": 7966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5270,
                                "src": "1936:19:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 7967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1936:21:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1932:25:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1925:32:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1911:46:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e645377617045786368616e6765506f6f6c323054313135353a20696e69744c69717569646974793a206572633230416d6f756e74206d7573742062652067726561746572207468616e2031303030",
                        "id": 7971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1971:85:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d24573e5b94724b3d5f199c65de2e54446d7b00d0336c11f399c8945cb8dbffe",
                          "typeString": "literal_string \"MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000\""
                        },
                        "value": "MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d24573e5b94724b3d5f199c65de2e54446d7b00d0336c11f399c8945cb8dbffe",
                          "typeString": "literal_string \"MelandSwapExchangePool20T1155: initLiquidity: erc20Amount must be greater than 1000\""
                        }
                      ],
                      "id": 7961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1890:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:176:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7973,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:176:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7975,
                          "name": "erc1155Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7958,
                          "src": "2097:13:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2113:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2097:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352e696e69744c69717569646974793a2065726331313535416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 7978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2128:85:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_799372f9a9b823b1d7bab862b4e5c36ea97c22d2071ddb66449f2a461d9d41db",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_799372f9a9b823b1d7bab862b4e5c36ea97c22d2071ddb66449f2a461d9d41db",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155.initLiquidity: erc1155Amount must be greater than 0\""
                        }
                      ],
                      "id": 7974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2076:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:147:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7980,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:147:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7982,
                            "name": "totalSupplie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "2254:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 7983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2254:14:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2272:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2254:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a20616c726561647920696e697469616c697a6564",
                        "id": 7986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:68:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de30ad4ee4b67343ea1c7638ef9a6a4d455d84717264a03e47deee79a5334e11",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de30ad4ee4b67343ea1c7638ef9a6a4d455d84717264a03e47deee79a5334e11",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: already initialized\""
                        }
                      ],
                      "id": 7981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2233:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:132:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7988,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:132:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7992,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7954,
                              "src": "2417:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7995,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2435:4:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                ],
                                "id": 7994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2427:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7993,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2427:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2427:13:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7990,
                              "name": "erc20token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7866,
                              "src": "2396:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 7991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5223,
                            "src": "2396:20:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 7997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2396:45:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7998,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7956,
                          "src": "2445:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2396:60:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a2070726f766964657220646f6573206e6f74206861766520656e6f75676820616c6c6f77616e6365",
                        "id": 8000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2470:88:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        }
                      ],
                      "id": 7989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2375:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:193:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8002,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:193:55"
                },
                {
                  "expression": {
                    "id": 8005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8003,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "2579:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8004,
                      "name": "erc1155Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7958,
                      "src": "2605:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:39:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8006,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:39:55"
                },
                {
                  "expression": {
                    "id": 8009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8007,
                      "name": "erc1155Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7878,
                      "src": "2628:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8008,
                      "name": "erc1155Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7958,
                      "src": "2645:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2628:30:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8010,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:30:55"
                },
                {
                  "expression": {
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8011,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "2668:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8012,
                      "name": "erc20Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7956,
                      "src": "2683:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2668:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8014,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:26:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8018,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2728:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8021,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2746:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          ],
                          "id": 8020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2738:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8019,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2738:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2738:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8023,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2753:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8015,
                        "name": "erc20token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7866,
                        "src": "2704:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 8017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5245,
                      "src": "2704:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8025,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:61:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8027,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2807:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8028,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2817:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8026,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4985,
                      "src": "2801:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8030,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:28:55"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8032,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "2926:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8033,
                        "name": "erc1155Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7958,
                        "src": "2936:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8034,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2951:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8031,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "2911:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:52:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8036,
                  "nodeType": "EmitStatement",
                  "src": "2906:57:55"
                }
              ]
            },
            "id": 8038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initLiquidity",
            "nameLocation": "1764:14:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1796:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1788:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7956,
                  "mutability": "mutable",
                  "name": "erc20Amount",
                  "nameLocation": "1822:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1814:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7958,
                  "mutability": "mutable",
                  "name": "erc1155Amount",
                  "nameLocation": "1851:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8038,
                  "src": "1843:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:92:55"
            },
            "returnParameters": {
              "id": 7960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:0:55"
            },
            "scope": 8186,
            "src": "1755:1215:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8056,
              "nodeType": "Block",
              "src": "3089:196:55",
              "statements": [
                {
                  "assignments": [
                    8044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8044,
                      "mutability": "mutable",
                      "name": "preActivate1155Reserve",
                      "nameLocation": "3107:22:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8056,
                      "src": "3099:30:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8043,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3099:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8048,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8045,
                      "name": "erc1155Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7878,
                      "src": "3132:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 8046,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "3161:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3132:52:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3099:85:55"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8049,
                            "name": "preActivate1155Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8044,
                            "src": "3214:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 8050,
                            "name": "erc20Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "3239:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3214:37:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8052,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3213:39:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8053,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "3255:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3213:65:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8042,
                  "id": 8055,
                  "nodeType": "Return",
                  "src": "3194:84:55"
                }
              ]
            },
            "functionSelector": "50c9f529",
            "id": 8057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20AvailableSpace",
            "nameLocation": "3034:22:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:55"
            },
            "returnParameters": {
              "id": 8042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "3080:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:9:55"
            },
            "scope": 8186,
            "src": "3025:260:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8150,
              "nodeType": "Block",
              "src": "3379:1270:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8065,
                            "name": "totalSupplie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "3410:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3410:14:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3427:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3410:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206e6f7420696e697469616c697a6564",
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3442:68:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d0256db179ccc37b667ea5d3084b5d2f5e927bfbeb00056b633959dd3bc615",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d0256db179ccc37b667ea5d3084b5d2f5e927bfbeb00056b633959dd3bc615",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not initialized\""
                        }
                      ],
                      "id": 8064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3389:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:131:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8071,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:131:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8073,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8061,
                          "src": "3551:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8074,
                            "name": "getERC20AvailableSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8057,
                            "src": "3566:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3566:24:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3551:39:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206e6f7420656e6f756768207370616365",
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3604:69:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88324553709155b0fb201a8cffbab235151f01ce1b4686696a84974ac2245791",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88324553709155b0fb201a8cffbab235151f01ce1b4686696a84974ac2245791",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: not enough space\""
                        }
                      ],
                      "id": 8072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3530:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3530:153:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8079,
                  "nodeType": "ExpressionStatement",
                  "src": "3530:153:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 8083,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8059,
                              "src": "3735:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 8086,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3753:4:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                                    "typeString": "contract MelandSwapExchangePool20T1155"
                                  }
                                ],
                                "id": 8085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3745:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8084,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3745:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3745:13:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8081,
                              "name": "erc20token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7866,
                              "src": "3714:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 8082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5223,
                            "src": "3714:20:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 8088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:45:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8089,
                          "name": "erc20Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8061,
                          "src": "3763:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3714:60:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c3230543131353523696e69744c69717569646974793a2070726f766964657220646f6573206e6f74206861766520656e6f75676820616c6c6f77616e6365",
                        "id": 8091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3788:88:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a96f201ff1f418b9e8475d6ae0652443857813b3218ec635dedc4d1f64a21a4",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#initLiquidity: provider does not have enough allowance\""
                        }
                      ],
                      "id": 8080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3693:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:193:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8093,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:193:55"
                },
                {
                  "assignments": [
                    8095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8095,
                      "mutability": "mutable",
                      "name": "erc1155Activate",
                      "nameLocation": "3965:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8150,
                      "src": "3957:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3957:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8102,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8096,
                            "name": "erc20Amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8061,
                            "src": "3984:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8097,
                            "name": "erc20Reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "3998:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3984:26:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8099,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3983:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 8100,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "4014:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3983:54:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3957:80:55"
                },
                {
                  "expression": {
                    "id": 8105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8103,
                      "name": "erc1155ReserveActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "4047:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8104,
                      "name": "erc1155Activate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8095,
                      "src": "4074:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4047:42:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8106,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:42:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8108,
                          "name": "erc1155Reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7878,
                          "src": "4108:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8109,
                          "name": "erc1155ReserveActivated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7880,
                          "src": "4126:23:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4108:41:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656c616e642e537761702e45786368616e6765506f6f6c323054313135352361646445524332304c69717569646974793a206572633131353552657365727665416374697661746564206d757374206265206c657373207468616e206572633131353552657365727665",
                        "id": 8111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4151:109:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36d6f82ae58480305306fb3c8ff1ee471340f1437b58b0d5f76ab5981c81ab33",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve\""
                        },
                        "value": "Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36d6f82ae58480305306fb3c8ff1ee471340f1437b58b0d5f76ab5981c81ab33",
                          "typeString": "literal_string \"Meland.Swap.ExchangePool20T1155#addERC20Liquidity: erc1155ReserveActivated must be less than erc1155Reserve\""
                        }
                      ],
                      "id": 8107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4100:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:161:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8113,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:161:55"
                },
                {
                  "assignments": [
                    8115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8115,
                      "mutability": "mutable",
                      "name": "liquidityToMint",
                      "nameLocation": "4280:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 8150,
                      "src": "4272:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8116,
                            "name": "erc20Amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8061,
                            "src": "4299:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8117,
                              "name": "totalSupplie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7952,
                              "src": "4313:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 8118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4313:14:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4299:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8120,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4298:30:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8121,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "4331:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4298:45:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:71:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8127,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4378:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8130,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4396:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MelandSwapExchangePool20T1155_$8186",
                              "typeString": "contract MelandSwapExchangePool20T1155"
                            }
                          ],
                          "id": 8129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4388:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4388:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4388:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8132,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "4403:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8124,
                        "name": "erc20token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7866,
                        "src": "4354:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$5271",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 8126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5245,
                      "src": "4354:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 8133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8134,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:61:55"
                },
                {
                  "expression": {
                    "id": 8137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8135,
                      "name": "erc20Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7876,
                      "src": "4425:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8136,
                      "name": "erc20Amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8061,
                      "src": "4441:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4425:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8138,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:27:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8140,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4494:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8141,
                        "name": "liquidityToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8115,
                        "src": "4504:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8139,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4985,
                      "src": "4488:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4488:32:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8143,
                  "nodeType": "ExpressionStatement",
                  "src": "4488:32:55"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8145,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8059,
                        "src": "4617:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4627:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 8147,
                        "name": "erc20Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "4630:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8144,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "4602:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:40:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "EmitStatement",
                  "src": "4597:45:55"
                }
              ]
            },
            "id": 8151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addERC20Liquidity",
            "nameLocation": "3300:18:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8059,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "3327:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "3319:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8061,
                  "mutability": "mutable",
                  "name": "erc20Amount",
                  "nameLocation": "3345:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "3337:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3337:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3318:39:55"
            },
            "returnParameters": {
              "id": 8063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:55"
            },
            "scope": 8186,
            "src": "3291:1358:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8158,
              "nodeType": "Block",
              "src": "4747:16:55",
              "statements": []
            },
            "id": 8159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addERC1155Liquidity",
            "nameLocation": "4664:20:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8153,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "4693:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "4685:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8155,
                  "mutability": "mutable",
                  "name": "erc1155Amount",
                  "nameLocation": "4711:13:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "4703:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4684:41:55"
            },
            "returnParameters": {
              "id": 8157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4747:0:55"
            },
            "scope": 8186,
            "src": "4655:108:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4026,
              5587
            ],
            "body": {
              "id": 8171,
              "nodeType": "Block",
              "src": "4914:49:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8167,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "4931:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$4027_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 8168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4026,
                      "src": "4931:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 8169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4931:25:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 8166,
                  "id": 8170,
                  "nodeType": "Return",
                  "src": "4924:32:55"
                }
              ]
            },
            "id": 8172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "4778:8:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8163,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 8161,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "4852:14:55"
                },
                {
                  "id": 8162,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5588,
                  "src": "4868:7:55"
                }
              ],
              "src": "4843:33:55"
            },
            "parameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4786:2:55"
            },
            "returnParameters": {
              "id": 8166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8172,
                  "src": "4894:14:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8164,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4893:16:55"
            },
            "scope": 8186,
            "src": "4769:194:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3999,
              5578
            ],
            "body": {
              "id": 8184,
              "nodeType": "Block",
              "src": "5109:51:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8180,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "5126:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$4027_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 8181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3999,
                      "src": "5126:25:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5126:27:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8179,
                  "id": 8183,
                  "nodeType": "Return",
                  "src": "5119:34:55"
                }
              ]
            },
            "id": 8185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4978:10:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8176,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 8174,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4027,
                  "src": "5054:14:55"
                },
                {
                  "id": 8175,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5588,
                  "src": "5070:7:55"
                }
              ],
              "src": "5045:33:55"
            },
            "parameters": {
              "id": 8173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4988:2:55"
            },
            "returnParameters": {
              "id": 8179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8185,
                  "src": "5096:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5096:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5095:9:55"
            },
            "scope": 8186,
            "src": "4969:191:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8187,
        "src": "387:4775:55",
        "usedErrors": []
      }
    ],
    "src": "32:5131:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-05-25T07:00:07.380Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}